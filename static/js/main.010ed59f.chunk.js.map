{"version":3,"sources":["components/Section/Section.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/Section/index.js","components/ContactForm/index.js","components/ContactList/index.js","components/Filter/index.js","App.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","Section","title","children","className","s","section","prototype","PropTypes","string","isRequired","ContactForm","state","name","number","handeInputCange","e","currentTarget","value","setState","handeInputSubmit","preventDefault","props","onSubmit","this","wraper","htmlFor","labelTitle","type","id","inputText","onChange","btnSubmit","Component","ContactList","contacts","onDelete","contactsList","map","onClick","button","Filter","filter","onFilterInput","App","formSubmitHandler","data","formName","formNumber","find","alert","trim","newContact","shortid","generate","prevState","filterHandle","toLocaleLowerCase","includes","filterInputhandler","target","contactLocalStorage","localStorage","getItem","parsedContactsLS","JSON","parse","prevProps","setItem","stringify","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,QAAU,2B,mBCA5BD,EAAOC,QAAU,CAAC,UAAY,4B,kBCA9BD,EAAOC,QAAU,CAAC,OAAS,4BAA4B,WAAa,gCAAgC,UAAY,+BAA+B,UAAY,iC,uMCErJC,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACtB,OACI,0BAASC,UAAWC,IAAEC,QAAtB,UACI,6BACKJ,IAEJC,MAKbF,EAAQM,UAAY,CAChBL,MAAOM,IAAUC,OAAOC,YAEbT,Q,wBCbMU,E,4MACjBC,MAAQ,CACJC,KAAM,IACNC,OAAQ,K,EAEZC,gBAAkB,SAAAC,GAAM,IAAD,EACKA,EAAEC,cAAlBJ,EADW,EACXA,KAAMK,EADK,EACLA,MACd,EAAKC,SAAL,eACON,EAAOK,K,EAGlBE,iBAAmB,SAAAJ,GACfA,EAAEK,iBACF,EAAKC,MAAMC,SAAS,EAAKX,OACzB,EAAKO,SAAS,CACVN,KAAM,IACNC,OAAQ,O,uDAIN,IAAD,EACoBU,KAAKZ,MAAtBC,EADH,EACGA,KAAMC,EADT,EACSA,OACd,OACI,uBAAMS,SAAUC,KAAKJ,iBAAkBhB,UAAWC,IAAEoB,OAApD,UACI,uBAAOC,QAAO,YAAOb,GAAQT,UAAWC,IAAEsB,WAA1C,oBACA,uBAAOC,KAAK,OACRf,KAAK,OACLK,MAAOL,EACPgB,GAAE,YAAOhB,GACTT,UAAWC,IAAEyB,UACbC,SAAUP,KAAKT,kBAEnB,uBAAOW,QAAO,YAAOZ,GAAUV,UAAWC,IAAEsB,WAA5C,sBACA,uBAAOC,KAAK,OACRf,KAAK,SACLgB,GAAE,YAAOf,GACTI,MAAOJ,EACPV,UAAWC,IAAEyB,UACbC,SAAUP,KAAKT,kBAEnB,wBAAQa,KAAK,SAASxB,UAAWC,IAAE2B,UAAnC,iC,GAxCyBC,a,gBC4B1BC,EA5BK,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAG7B,OAEI,oBAAKhC,UAAWC,IAAEgC,aAAlB,SACKF,EAASG,KAAI,gBAAGT,EAAH,EAAGA,GAAIhB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACV,+BACKD,EADL,KACaC,EACT,wBAAQe,GAAIA,EAAIU,QAASH,EAAUhC,UAAWC,IAAEmC,OAAhD,sBAFKX,S,iBCYVY,EAnBA,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,OAAQC,EAAoB,EAApBA,cACtB,OACI,mCACI,+BACI,2DACI,uBAAOf,KAAK,OACRxB,UAAWC,IAAEyB,UACbjB,KAAK,SACLK,MAAOwB,EACPX,SAAUY,YCNbC,E,4MACnBhC,MAAQ,CACNuB,SAAU,GAEVO,OAAQ,K,EAmBVG,kBAAoB,SAAAC,GAClB,IAAIC,EAAWD,EAAKjC,KAChBmC,EAAaF,EAAKhC,OAEtB,GADqB,EAAKF,MAAlBuB,SACKc,MAAK,qBAAGpC,OAAoBiC,EAAKjC,QAC5CqC,MAAM,GAAD,OAAIJ,EAAKjC,KAAT,iCAGP,GAAwB,KAApBkC,EAASI,OAIb,GAA0B,KAAtBH,EAAWG,OAAf,CAKA,IAAMC,EAAa,CAAEvB,GAAIwB,IAAQC,WAAYzC,KAAMiC,EAAKjC,KAAMC,OAAQgC,EAAKhC,QAE3E,EAAKK,UAAS,SAAAoC,GACZ,MAAO,CACLpB,SAAS,GAAD,mBAAMoB,EAAUpB,UAAhB,CAA0BiB,aARpCF,MAAM,8CAJNA,MAAM,2B,EAiBVM,aAAe,WAAO,IAAD,EACU,EAAK5C,MAA1B8B,EADW,EACXA,OAAQP,EADG,EACHA,SAEhB,OAAOO,EACHP,EAASO,QAAO,qBAAG7B,KACd4C,oBAAoBC,SAAShB,EAAOe,wBAEzCtB,G,EAGNwB,mBAAqB,SAAA3C,GACnB,IAAM0B,EAAS1B,EAAE4C,OAAO1C,MACxB,EAAKC,SAAS,CAAEuB,Y,EAIlBN,SAAW,SAAApB,GACT,EAAKG,UAAS,SAAAoC,GACZ,MAAO,CACLpB,SAAS,YACJoB,EAAUpB,SAASO,QAAO,qBAAGb,KAAgBb,EAAE4C,OAAO/B,Y,kEA9D/D,IAAMgC,EAAsBC,aAAaC,QAAb,YACtBC,EAAmBC,KAAKC,MAAML,GAChCG,GACFxC,KAAKL,SACH,CAAEgB,SAAU6B,M,yCAKCG,EAAWZ,GACxB/B,KAAKZ,MAAMuB,WAAaoB,EAAUpB,UACpC2B,aAAaM,QAAb,WAAiCH,KAAKI,UAAU7C,KAAKZ,MAAMuB,a,+BAyDrD,IAAD,EACsBX,KAAKZ,MAA1B8B,EADD,EACCA,OAAQP,EADT,EACSA,SAChB,OACE,qCACE,cAAC,EAAD,CAASjC,MAAM,YAAf,SACE,cAAC,EAAD,CAAaqB,SAAUC,KAAKqB,sBAE9B,eAAC,EAAD,CAAS3C,MAAM,WAAf,UACGiC,EAASmC,OAAS,GAAK,cAAC,EAAD,CAAQpD,MAAOwB,EAAQC,cAAenB,KAAKmC,qBACnE,cAAC,EAAD,CAAaxB,SAAUX,KAAKgC,eAAgBpB,SAAUZ,KAAKY,qB,GApFpCH,aCFjCsC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1B5E,EAAOC,QAAU,CAAC,aAAe,kCAAkC,OAAS,+B","file":"static/js/main.010ed59f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__NGAOX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputText\":\"Filter_inputText__WXGme\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wraper\":\"ContactForm_wraper__27Lfc\",\"labelTitle\":\"ContactForm_labelTitle__s1XOK\",\"inputText\":\"ContactForm_inputText__2AxN5\",\"btnSubmit\":\"ContactForm_btnSubmit__3tgLg\"};","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css'\r\n\r\nconst Section = ({ title, children }) => {\r\n    return (\r\n        <section className={s.section}>\r\n            <h2>\r\n                {title}\r\n            </h2>\r\n            {children}\r\n        </section>\r\n\r\n    )\r\n}\r\nSection.prototype = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\nexport default Section","import s from \"./ContactForm.module.css\";\r\nimport { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class ContactForm extends Component {\r\n    state = {\r\n        name: ' ',\r\n        number: ' ',\r\n    }\r\n    handeInputCange = e => {\r\n        const { name, value } = e.currentTarget;\r\n        this.setState(\r\n            { [name]: value }\r\n        )\r\n    }\r\n    handeInputSubmit = e => {\r\n        e.preventDefault()\r\n        this.props.onSubmit(this.state)\r\n        this.setState({\r\n            name: ' ',\r\n            number: ' ',\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { name, number } = this.state\r\n        return (\r\n            <form onSubmit={this.handeInputSubmit} className={s.wraper}>\r\n                <label htmlFor={`id${name}`} className={s.labelTitle}> Name </label>\r\n                <input type=\"text\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    id={`id${name}`}\r\n                    className={s.inputText}\r\n                    onChange={this.handeInputCange} />\r\n\r\n                <label htmlFor={`id${number}`} className={s.labelTitle}> Number </label>\r\n                <input type=\"text\"\r\n                    name=\"number\"\r\n                    id={`id${number}`}\r\n                    value={number}\r\n                    className={s.inputText}\r\n                    onChange={this.handeInputCange} />\r\n\r\n                <button type=\"submit\" className={s.btnSubmit}> Add Contact</button>\r\n\r\n            </form>\r\n        )\r\n    }\r\n}\r\nContactForm.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n};","import s from \"./ContactList.module.css\";\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst ContactList = ({ contacts, onDelete }) => {\r\n\r\n\r\n    return (\r\n\r\n        < ul className={s.contactsList}>\r\n            {contacts.map(({ id, name, number }) => (\r\n                <li key={id}>\r\n                    {name}: {number}\r\n                    <button id={id} onClick={onDelete} className={s.button}>\r\n                        Delete\r\n                    </button>\r\n                </li>\r\n            ))}\r\n        </ul >\r\n    )\r\n\r\n}\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.exact({\r\n            id: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            number: PropTypes.string.isRequired,\r\n        }).isRequired,\r\n    ),\r\n    onDelete: PropTypes.func.isRequired,\r\n};\r\nexport default ContactList","import s from \"./Filter.module.css\";\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Filter = ({ filter, onFilterInput }) => {\r\n    return (\r\n        <>\r\n            <form>\r\n                <label> Find contacts by name\r\n                    <input type=\"text\"\r\n                        className={s.inputText}\r\n                        name=\"filter\"\r\n                        value={filter}\r\n                        onChange={onFilterInput} />\r\n                </label>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\nFilter.propTypes = {\r\n    filter: PropTypes.string,\r\n    onFilterInput: PropTypes.func.isRequired,\r\n};\r\nexport default Filter","import { Component } from \"react\";\nimport shortid from 'shortid'\nimport Section from \"./components//Section\";\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\";\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n    ],\n    filter: ' ',\n  }\n  componentDidMount() {\n    const contactLocalStorage = localStorage.getItem(`contacts`)\n    const parsedContactsLS = JSON.parse(contactLocalStorage)\n    if (parsedContactsLS) {\n      this.setState(\n        { contacts: parsedContactsLS }\n      )\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(`contacts`, JSON.stringify(this.state.contacts))\n    }\n\n  }\n\n  formSubmitHandler = data => {\n    let formName = data.name;\n    let formNumber = data.number\n    const { contacts } = this.state;\n    if (contacts.find(({ name }) => name === data.name)) {\n      alert(`${data.name} is already in contacts`);\n      return;\n    }\n    if (formName.trim() === '') {\n      alert(`enter the name contact`)\n      return\n    }\n    if (formNumber.trim() === '') {\n      alert(`enter the phone number of the contact`)\n      return\n    }\n\n    const newContact = { id: shortid.generate(), name: data.name, number: data.number };\n\n    this.setState(prevState => {\n      return {\n        contacts: [...prevState.contacts, newContact]\n      };\n    })\n  }\n\n  filterHandle = () => {\n    const { filter, contacts } = this.state;\n\n    return filter\n      ? contacts.filter(({ name }) =>\n        name.toLocaleLowerCase().includes(filter.toLocaleLowerCase()),\n      )\n      : contacts;\n  }\n\n  filterInputhandler = e => {\n    const filter = e.target.value;\n    this.setState({ filter });\n\n  };\n\n  onDelete = e => {\n    this.setState(prevState => {\n      return {\n        contacts: [\n          ...prevState.contacts.filter(({ id }) => id !== e.target.id),\n        ],\n      };\n    });\n  };\n\n  render() {\n    const { filter, contacts } = this.state\n    return (\n      <>\n        <Section title='Phonebook'>\n          <ContactForm onSubmit={this.formSubmitHandler} />\n        </Section>\n        <Section title='Contacts'>\n          {contacts.length > 1 && <Filter value={filter} onFilterInput={this.filterInputhandler} />}\n          <ContactList contacts={this.filterHandle()} onDelete={this.onDelete} />\n        </Section>\n      </>\n    )\n  }\n\n\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactList_contactsList__2-bFh\",\"button\":\"ContactList_button__3xhUb\"};"],"sourceRoot":""}